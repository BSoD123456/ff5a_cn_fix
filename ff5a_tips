no$gba dev 2.6A can break vram
but, 3.02 can not.

80c2d04 bl 8102410 ; decompress char tile to [r2](2013c0c) from [r1](826b47c)
80c2d32 bl 810241c ; copy char tile(as img) to vram(6010c00) from [r0](2013c14)

83f9f62=me-font
801cefe bl 8102410 ; flat font from rom to bit-font wram
  80d46d0 bl 8102410(r4:801ce9d) ; flat font, search font tab, char index r3
    looped_
    80d379a ldrh r2, [r0+4] ; load char index from a tab(~= 20143e8+)
    80d37b0 bl 8102410(r4:80d4699) ; char index r2
    looped^
      80d1b5e bl 8102410(r4:80d3659) ;
        804bf56 bl 8102410(r4:80d1aad) ;
      
20143e8 tab change on 80d2812
  looped_
  80d28c6 bl 8102408(r2:80d24c9) ; get char index !! func_80d24c8: read text get char index !!
  ->80d24d8 ldrb r3,[r2] ; load a byte from rom TEXT, 83baab6 here the first text.
  80d28dc bl 80d32a4 ; as jump, no ret in recur
  80d32c0 bl 8102410(r4:80d2725) ; fill a line, looped
  80d330e bl 80d28c0 ; recur(loop)
  looped^
    80d3a60 bl 8102410(r4:80d289d) ;
      80d1b26 bl 8102410(r4:80d39e9) ;
        804bf56 bl 8102410(r4:80d1aad) ;

a part of decompile func_80d24c8:
  p_txt_cur = (byte *)(*(int *)(param_1 + 4) + *(int *)(param_1 + 0x14));
  _dchar = (uint)*p_txt_cur;
  step = 1;
  if (0x7f < _dchar) {
    if (_dchar < 0xe0) {
      _dchar = p_txt_cur[1] & 0x3f | (_dchar & 0x1f) << 6;
      step = 2;
    }
    else {
      if (_dchar < 0xf0) {
        _dchar = p_txt_cur[2] & 0x3f | (_dchar & 0xf) << 0xc | (p_txt_cur[1] & 0x3f) << 6;
        step = 3;
      }
    }
  }

it is changed in cn:
  p_txt_cur = (byte *)(*(int *)(param_1 + 4) + *(int *)(param_1 + 0x14));
  _dchar = (uint)*p_txt_cur;
  step = 1;
  if (0xdf < _dchar) {
    _dchar1 = (uint)p_txt_cur[1];
    if (_dchar < 0xf0) {
      _dchar = ((_dchar - 0xdf) * 0x100 + _dchar1) - 0x20;
    }
    else {
      _dchar = (_dchar << 0x1c) >> 0x14 | _dchar1;
    }
    step = 2;
  }



when change name, read the default name [877aa2b]

807242a bl 8102408(r2:80724c1)->
8072740 bl 8102404(r1:80738c5)->
80738c8 bl 8102404(r1:8073845)
->807386a bl 8102408(r2:8072391)
  ->807239e bl 8102408(r2:8072325) read text idx = r1 * 2 + cnjp
    ->807234e bl 8102408(r2:80d24c9) decode char idx
      ->read at 80d24d8
      807235c bl 8102408(r2:80722ad) find char tab idx, cn failed here
      ->8072308 bl 8102408(r2:80d2539)
        ->read at 80d254c

when reset to default name read [877aa2b]

8072fe4 bl 8102408(r2:8072391)
->...same as above
8072ff0 ldrh r0, [r2] ; read char pos by above
8072ff2 strh r0, [r1] ; set char pos to buf

when reset to default name read [877aa32](cn)

when battle show lina's name read [877a9fa](cn)
80d03c8 bl 8102410(r4:80d39e9) ; show name, idx = r1 * 2 + cnjp
->80d3a44 bl 8102410(r4:80d343d) ; set text idx to hndl
  ->80d3460 bl 810240c(r3:80d2585) ; get text info: offset, step, length... , something changed here, always step 2, and always switch to +1(<- that's wrong!)
  80d3a60 bl 8102410(r4:80d289d)
  ->80d28c6 bl 8102408(r2:80d24c9)
    ->at 80d24d8
